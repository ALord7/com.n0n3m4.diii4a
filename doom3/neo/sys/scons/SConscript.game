# -*- mode: python -*-
# DOOM build script
# TTimo <ttimo@idsoftware.com>
# http://scons.sourceforge.net

import sys, os
import scons_utils

Import( 'GLOBALS' )
Import( GLOBALS )

game_string = ' \
	AF.cpp \
	AFEntity.cpp \
	Actor.cpp \
	Camera.cpp \
	Entity.cpp \
	BrittleFracture.cpp \
	Fx.cpp \
	GameEdit.cpp \
	Game_local.cpp \
	Game_network.cpp \
	Item.cpp \
	IK.cpp \
	Light.cpp \
	Misc.cpp \
	Mover.cpp \
	Moveable.cpp \
	MultiplayerGame.cpp \
	Player.cpp \
	PlayerIcon.cpp \
	PlayerView.cpp \
	Projectile.cpp \
	Pvs.cpp \
	SecurityCamera.cpp \
	SmokeParticles.cpp \
	Sound.cpp \
	Target.cpp \
	Trigger.cpp \
	Weapon.cpp \
	WorldSpawn.cpp \
	ai/AAS.cpp \
	ai/AAS_debug.cpp \
	ai/AAS_pathing.cpp \
	ai/AAS_routing.cpp \
	ai/AI.cpp \
	ai/AI_events.cpp \
	ai/AI_pathing.cpp \
	ai/AI_Vagary.cpp \
	gamesys/DebugGraph.cpp \
	gamesys/Class.cpp \
	gamesys/Event.cpp \
	gamesys/SaveGame.cpp \
	gamesys/SysCmds.cpp \
	gamesys/SysCvar.cpp \
	gamesys/TypeInfo.cpp \
	anim/Anim.cpp \
	anim/Anim_Blend.cpp \
	anim/Anim_Import.cpp \
	anim/Anim_Testmodel.cpp \
	script/Script_Compiler.cpp \
	script/Script_Interpreter.cpp \
	script/Script_Program.cpp \
	script/Script_Thread.cpp \
	physics/Clip.cpp \
	physics/Force.cpp \
	physics/Force_Constant.cpp \
	physics/Force_Drag.cpp \
	physics/Force_Field.cpp \
	physics/Force_Spring.cpp \
	physics/Physics.cpp \
	physics/Physics_AF.cpp \
	physics/Physics_Actor.cpp \
	physics/Physics_Base.cpp \
	physics/Physics_Monster.cpp \
	physics/Physics_Parametric.cpp \
	physics/Physics_Player.cpp \
	physics/Physics_RigidBody.cpp \
	physics/Physics_Static.cpp \
	physics/Physics_StaticMulti.cpp \
	physics/Push.cpp'

if ( local_d3xp ):
	game_string += ' \
	Grabber.cpp \
	physics/Force_Grab.cpp'
	game_list = scons_utils.BuildList( 'd3xp', game_string )
elif ( local_cdoom ):
	game_list = scons_utils.BuildList( 'cdoom', game_string )
elif ( local_d3le ):
	game_string += ' \
	Grabber.cpp \
	physics/Force_Grab.cpp'
	game_list = scons_utils.BuildList( 'd3le', game_string )
elif ( local_rivensin ):
	game_string += ' \
	Grabber.cpp \
	tracer.cpp \
	TrailGenerator.cpp \
	PlayerCursor.cpp \
	ai/AI_bot.cpp \
	physics/Force_Grab.cpp'
	game_list = scons_utils.BuildList( 'rivensin', game_string )
elif ( local_hardcorps ):
	game_string += ' \
	Liquid.cpp \
	tracer.cpp \
	TrailGenerator.cpp \
	ai/AI_bot.cpp \
	physics/Physics_Liquid.cpp'
	game_list = scons_utils.BuildList( 'hardcorps', game_string )
elif ( local_quake4 ):
	game_string += ' \
	Effect.cpp \
	FreeView.cpp \
	Game_Debug.cpp \
	Game_Log.cpp \
	Healing_Station.cpp \
	IconManager.cpp \
	Instance.cpp \
	Playback.cpp \
	Player_Cheats.cpp \
	Player_States.cpp \
	spawner.cpp \
	SplineMover.cpp \
	Icon.cpp \
	LipSync.cpp \
	TramGate.cpp \
	gamesys/State.cpp \
	script/ScriptFuncUtility.cpp \
	vehicle/Vehicle.cpp \
	vehicle/VehicleAnimated.cpp \
	vehicle/VehicleController.cpp \
	vehicle/VehicleDriver.cpp \
	vehicle/VehicleMonster.cpp \
	vehicle/VehicleParts.cpp \
	vehicle/VehiclePosition.cpp \
	vehicle/VehicleRigid.cpp \
	vehicle/VehicleSpline.cpp \
	vehicle/VehicleStatic.cpp \
	vehicle/Vehicle_DropPod.cpp \
	vehicle/Vehicle_Walker.cpp \
	client/ClientAFEntity.cpp \
	client/ClientEffect.cpp \
	client/ClientEntity.cpp \
	client/ClientModel.cpp \
	client/ClientMoveable.cpp \
	ai/AAS_Find.cpp \
	ai/AASCallback_FindCoverArea.cpp \
	ai/AASCallback_AvoidLocation.cpp \
	ai/Monster_Berserker.cpp \
	ai/Monster_BossBuddy.cpp \
	ai/Monster_BossMakron.cpp \
	ai/Monster_ConvoyGround.cpp \
	ai/Monster_ConvoyHover.cpp \
	ai/Monster_FailedTransfer.cpp \
	ai/Monster_Fatty.cpp \
	ai/Monster_Gladiator.cpp \
	ai/Monster_Grunt.cpp \
	ai/Monster_Gunner.cpp \
	ai/Monster_Harvester.cpp \
	ai/Monster_HarvesterDispersal.cpp \
	ai/Monster_HeavyHoverTank.cpp \
	ai/Monster_IronMaiden.cpp \
	ai/Monster_LightTank.cpp \
	ai/Monster_NetworkGuardian.cpp \
	ai/Monster_RepairBot.cpp \
	ai/Monster_Scientist.cpp \
	ai/Monster_Sentry.cpp \
	ai/Monster_SlimyTransfer.cpp \
	ai/Monster_StreamProtector.cpp \
	ai/Monster_StroggFlyer.cpp \
	ai/Monster_StroggHover.cpp \
	ai/Monster_StroggMarine.cpp \
	ai/Monster_TeleportDropper.cpp \
	ai/Monster_Turret.cpp \
	ai/Monster_TurretFlying.cpp \
	ai/AI_Actions.cpp \
	ai/AI_Announcements.cpp \
	ai/AI_Debug.cpp \
	ai/AI_Manager.cpp \
	ai/AI_Medic.cpp \
	ai/AI_Move.cpp \
	ai/AI_States.cpp \
	ai/AI_Tactical.cpp \
	ai/AI_Util.cpp \
	ai/VehicleAI.cpp \
	ai/AAS_tactical.cpp \
	ai/ObstacleAvoidance.cpp \
	weapon/WeaponBlaster.cpp \
	weapon/WeaponGrenadeLauncher.cpp \
	weapon/WeaponMachinegun.cpp \
	weapon/WeaponRailgun.cpp \
	weapon/WeaponDarkMatterGun.cpp \
	weapon/WeaponHyperblaster.cpp \
	weapon/WeaponNailgun.cpp \
	weapon/WeaponRocketLauncher.cpp \
	weapon/WeaponGauntlet.cpp \
	weapon/WeaponLightningGun.cpp \
	weapon/WeaponNapalmGun.cpp \
	weapon/WeaponShotgun.cpp \
	mp/Buying.cpp \
	mp/CTF.cpp \
	mp/GameState.cpp \
	mp/Tourney.cpp \
	mp/VoiceComms.cpp \
	mp/stats/StatEvent.cpp \
	mp/stats/StatManager.cpp \
	mp/stats/StatWindow.cpp \
	physics/Physics_Particle.cpp \
	physics/Physics_VehicleMonster.cpp \
	bots/Bot.cpp \
	bots/Bot_char.cpp \
	bots/Bot_chat.cpp \
	bots/Bot_goal.cpp \
	bots/Bot_Input.cpp \
	bots/Bot_weapons.cpp \
	bots/Bot_weights.cpp \
	bots/BotAI.cpp \
	bots/BotAI_Battle_Attacked.cpp \
	bots/BotAI_Battle_Chase.cpp \
	bots/BotAI_Battle_Fight.cpp \
	bots/BotAI_Battle_NBG.cpp \
	bots/BotAI_Battle_Retreat.cpp \
	bots/BotAI_respawn.cpp \
	bots/BotAI_Seek_NBG.cpp \
	bots/BotAI_SeekLTG.cpp \
	'
# Game_render.cpp
	game_string = game_string.replace('Fx.cpp ', '')
	game_string = game_string.replace('PlayerIcon.cpp ', '')
	game_string = game_string.replace('SmokeParticles.cpp ', '')
	game_string = game_string.replace('ai/AI_Vagary.cpp ', '')
	game_string = game_string.replace('gamesys/TypeInfo.cpp ', '')
	game_list = scons_utils.BuildList( 'quake4', game_string )
else:
	game_list = scons_utils.BuildList( 'game', game_string )

for i in range( len( game_list ) ):
	game_list[ i ] = '../../' + game_list[ i ]

local_env = g_game_env.Clone()
if ( local_d3xp ):
	local_env.Append( CPPDEFINES = [ '_D3XP', 'CTF' ] )

if ( local_cdoom ):
	local_env.Append( CPPDEFINES = [ '_CDOOM' ] )

if ( local_d3le ):
	local_env.Append( CPPDEFINES = [ '_D3LE', '_D3XP', 'CTF' ] )

if ( local_rivensin ):
	local_env.Append( CPPDEFINES = [ '_RIVENSIN', '_DENTONMOD', '_PORTALSKY', '_HDR' ] )

if ( local_hardcorps ):
	local_env.Append( CPPDEFINES = [ '_HARDCORPS', '_DENTONMOD', '_PORTALSKY', '_WATER_PHYSICS' ] )

if ( local_quake4 ):
	local_env.Append( CPPDEFINES = [ '_QUAKE4' ] )

#local_env.Append( LIBPATH = [ '/data/data/com.termux/files/home/ndk/android_gcc32/arm-linux-androideabi/lib/armv7-a', '/data/data/com.termux/files/home/ndk/android_gcc32/sysroot/usr/lib' ] ) # //k armv7-a
#local_env.Append( LIBPATH = [ '/data/data/com.termux/files/home/ndk/android-ndk-aide/toolchains/aarch64-linux-android-4.9/prebuilt/linux-arm64/lib/gcc/aarch64-linux-android/4.9.x', '/data/data/com.termux/files/home/ndk/android-ndk-aide/platforms/android-21/arch-arm64/usr/lib', '/data/data/com.termux/files/home/ndk/android-ndk-aide/sources/cxx-stl/gnu-libstdc++/4.9/libs/arm64-v8a' ] ) # //k arm64-v8a
#local_env.Append( LIBS = [ 'supc++' ] )

if ( local_demo == 1 ):
	local_env.Append( CPPDEFINES = [ 'ID_DEMO_BUILD' ] )

if ( local_gamedll == 1 ):
	local_env.Append( CPPDEFINES = [ 'GAME_DLL' ] )
	ret = local_env.SharedLibrarySafe( local_env, 'game', game_list + idlib_objects )
	Return( 'ret' )
else:
	ret_list = []
	for i in game_list:
		ret_list += local_env.StaticObject( source = i )
	Return( 'ret_list' )


